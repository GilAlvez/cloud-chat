service: cloud-chat
frameworkVersion: "3"
configValidationMode: error

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dynamodb-local

package:
  individually: true

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    platform: node
    target: node20
    format: esm
    outputFileExtension: .mjs
    concurrency: 10
    exclude: "@aws-sdk/*"
    define:
      require.resolve: undefined
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 256
  deploymentMethod: direct
  architecture: arm64
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !GetAtt CloudChatTable.Arn

functions:
  signUp:
    handler: src/functions/signUp.handler
    events:
      - httpApi:
          path: /auth/sign-up
          method: post

resources:
  Resources:
    CloudChatTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: cloud-chat
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: key
            KeyType: RANGE

    CloudChatSmsRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - cognito-idp.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: CloudChatSmsRolePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource: "*"

    CloudChatUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: cloud-chat-user-pool
        MfaConfiguration: OFF
        DeletionProtection: ACTIVE
        UsernameAttributes:
          - phone_number
        AutoVerifiedAttributes:
          - phone_number
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_phone_number
              Priority: 1
        SmsConfiguration:
          SnsCallerArn: !GetAtt CloudChatSmsRole.Arn
          ExternalId: !Ref AWS::AccountId
          SnsRegion: !Ref AWS::Region
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        Schema:
          - AttributeDataType: String
            Name: phone_number
            Required: true
            Mutable: true
          - AttributeDataType: String
            Name: name
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
            TemporaryPasswordValidityDays: 1
